spring.data.jest.uri=http://10.54.8.115:9200

# Specify the DirectoryProvider to use (the Lucene Directory)

spring.jpa.properties.hibernate.search.default.directory_provider = filesystem


# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
spring.jpa.properties.hibernate.search.default.indexBase = D:/work/indexes

spring.jpa.properties.hibernate.search.default_backend=elasticsearch 
spring.jpa.properties.hibernate.search.backends.elasticsearch.type=elasticsearch
spring.jpa.properties.hibernate.search.backends.elasticsearch.hosts=localhost:9200
spring.jpa.properties.hibernate.search.backends.elasticsearch.protocol=http
spring.jpa.properties.hibernate.search.backends.elasticsearch.layout.strategy=com.rbbn.hibernate.example.crudapi.model.CustomLayoutStrategy
spring.jpa.properties.hibernate.search.backends.elasticsearch.index_defaults.schema_management.minimal_required_status=yellow
spring.jpa.properties.hibernate.search.default.elasticsearch.index_management_wait_timeout=60s

spring.jpa.properties.hibernate.search.backends.elasticsearch.request_timeout=90000
spring.jpa.properties.hibernate.search.backends.elasticsearch.connection_timeout=30000
spring.jpa.properties.hibernate.search.backends.elasticsearch.read_timeout=90000


spring.datasource.url=jdbc:mysql://localhost:3306/crudapi
spring.datasource.username=root
spring.datasource.password=sonus

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

db.type=SQL

#hibernate.search.default.elasticsearch.host=http://127.0.0.1:9300

# Specify the DirectoryProvider to use (the Lucene Directory)
#spring.jpa.properties.hibernate.search.default.directory_provider = filesystem

# Using the filesystem DirectoryProvider you also have to specify the default
# base directory for all indexes (make sure that the application have write
# permissions on such directory)
#spring.jpa.properties.hibernate.search.default.indexBase = D:/work/crudapi/indexesBase/

hibernate.search.default.indexwriter.infostream=true